{"version":3,"sources":["assets/whatsapp.png","assets/telegram.png","assets/viber.png","assets/icon1.svg","assets/icon2.svg","assets/icon3.svg","assets/icon4.svg","header/header.jsx","body/body.jsx","icons/icons.jsx","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","class","React","Component","Body","src","whatsapp","alt","telegram","viber","Icons","icon1","icon2","icon3","icon4","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,iPC8B5BC,G,6KAzBX,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,QACb,uBAAGC,KAAK,IAAID,UAAU,oBAAtB,wCAGA,uBAAGC,KAAK,IAAID,UAAU,mBAAtB,4BAGA,yBAAKA,UAAU,sBACb,yBAAKE,MAAM,2BAAX,kNAKJ,yBAAKF,UAAU,SACb,uBAAGC,KAAK,kBAAkBD,UAAU,gBAApC,iC,GAlBWG,IAAMC,Y,wDCuCZC,E,uKAlCX,OACE,yBAAKL,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,cAEjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eAAf,8QACsD,6BADtD,gGAIA,yBAAKA,UAAU,oBACb,uBAAGC,KAAK,kBAAkBD,UAAU,uBAApC,yFAIF,yBAAKA,UAAU,oBACb,uBAAGC,KAAK,kBAAkBD,UAAU,UAClC,yBAAKM,IAAKC,IAAUC,IAAI,GAAGR,UAAU,gBAEvC,uBAAGC,KAAK,kBAAkBD,UAAU,UAClC,yBAAKM,IAAKG,IAAUD,IAAI,GAAGR,UAAU,gBAEvC,uBAAGC,KAAK,kBAAkBD,UAAU,UAClC,yBAAKM,IAAKI,IAAOF,IAAI,GAAGR,UAAU,wB,GA1B/BG,IAAMC,W,4EC4BVO,E,uKAzBX,OACE,yBAAKX,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAWM,IAAKM,IAAOJ,IAAI,KAC1C,yBAAKR,UAAU,oBAAf,8GAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAWM,IAAKO,IAAOL,IAAI,KAC1C,yBAAKR,UAAU,oBAAf,4IAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAWM,IAAKQ,IAAON,IAAI,KAC1C,yBAAKR,UAAU,oBAAf,uGAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,WAAWM,IAAKS,IAAOP,IAAI,KAC1C,yBAAKR,UAAU,oBAAf,sL,GAlBUG,IAAMC,WCSXY,MAVf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCciB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fdd80b3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.7084bfaf.png\";","module.exports = __webpack_public_path__ + \"static/media/telegram.473b9e3e.png\";","module.exports = __webpack_public_path__ + \"static/media/viber.5b17f89a.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.b5333221.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon2.7b8974d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon3.e29669fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon4.5c86a52c.svg\";","import React from \"react\";\nimport \"./header.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"logo\">\n          <a href=\"/\" className=\"header-text main\">\n            Продам\n          </a>\n          <a href=\"/\" className=\"header-text sub\">\n            Куру\n          </a>\n          <div className=\"header-description\">\n            <div class=\"header-description-text\">\n              Продажа куриц по Перми и Пермскому краю\n            </div>\n          </div>\n        </div>\n        <div className=\"phone\">\n          <a href=\"tel:79024785293\" className=\"phone-number\">\n            ☎ +7 902 478 52 93\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./body.css\";\nimport whatsapp from \"../assets/whatsapp.png\";\nimport telegram from \"../assets/telegram.png\";\nimport viber from \"../assets/viber.png\";\n\nclass Body extends React.Component {\n  render() {\n    return (\n      <div className=\"buy-body\">\n        <div className=\"bg-image-container\">\n          <div className=\"bg-image\" />\n        </div>\n        <div className=\"bg-text\">\n          <div className=\"bg-text-container\">\n            <div className=\"description\">\n              Продажа куриц с доставкой по Перми и Пермскому краю <br />\n              Работаем на заказ\n            </div>\n            <div className=\"button-container\">\n              <a href=\"tel:79024785293\" className=\"phone-number-button\">\n                Позвонить на +7 902 478 52 93\n              </a>\n            </div>\n            <div className=\"social-container\">\n              <a href=\"tel:79024785293\" className=\"social\">\n                <img src={whatsapp} alt=\"\" className=\"social-img\" />\n              </a>\n              <a href=\"tel:79024785293\" className=\"social\">\n                <img src={telegram} alt=\"\" className=\"social-img\" />\n              </a>\n              <a href=\"tel:79024785293\" className=\"social\">\n                <img src={viber} alt=\"\" className=\"social-img\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React from \"react\";\nimport \"./icons.css\";\nimport icon1 from \"../assets/icon1.svg\";\nimport icon2 from \"../assets/icon2.svg\";\nimport icon3 from \"../assets/icon3.svg\";\nimport icon4 from \"../assets/icon4.svg\";\n\nclass Icons extends React.Component {\n  render() {\n    return (\n      <div className=\"icons-container\">\n        <div className=\"icon-container\">\n          <img className=\"icon-img\" src={icon1} alt=\"\" />\n          <div className=\"icon-description\">Крупный и мелкий опт</div>\n        </div>\n        <div className=\"icon-container\">\n          <img className=\"icon-img\" src={icon2} alt=\"\" />\n          <div className=\"icon-description\">Курицы самых разных пород</div>\n        </div>\n        <div className=\"icon-container\">\n          <img className=\"icon-img\" src={icon3} alt=\"\" />\n          <div className=\"icon-description\">Поможем в доставке</div>\n        </div>\n        <div className=\"icon-container\">\n          <img className=\"icon-img\" src={icon4} alt=\"\" />\n          <div className=\"icon-description\">\n            Особые условия для крупного опта\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Icons;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../header/header\";\nimport Body from \"../body/body\";\nimport Icons from \"../icons/icons\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Body />\n      <Icons />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}